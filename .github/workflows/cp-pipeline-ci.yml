name: Pipeline CI Orchestrator

on:
  push:
    branches:
      - "*"

jobs:
  # pipeline-ci-orchestrator:
  #   name: Execute Pipeline CI
  #   uses: bcit-ltc/.github/.github/workflows/cp-pipeline-ci-reusable.yml@main
  #   secrets:
  #     HELM_REPO_PAT: ${{ secrets.HELM_REPO_PAT }}
  #     DAGGER_CLOUD_TOKEN: ${{ secrets.DAGGER_CLOUD_TOKEN }}

  k3d-single-cluster-demo:
    name: Single cluster on default network with imported registry
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - uses: AbsaOSS/k3d-action@v2
        name: "Create single k3d Cluster with imported Registry"
        with:
          cluster-name: test-cluster-1
          args: >-
            --config=.devcontainer/k3d.yaml
            --no-lb
            --k3s-arg "--no-deploy=traefik,servicelb,metrics-server@server:*"
      - name: "Docker repo demo"
        run: |
          docker build . -t myproj/demo:v1.0.0
          k3d image import myproj/demo:v1.0.0 -c test-cluster-1 --verbose
          kubectl apply -f pod.yaml

# permissions:
#   contents: write # to be able to publish a GitHub release
#   issues: write # to be able to comment on released issues
#   pull-requests: write # to be able to comment on released pull requests
#   packages: write # Required for pushing images  

# jobs:
#   pipeline-manager:
#     name: Pipeline Manager
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#       # - name: Print all ENVS
#       #   run: printenv
#       - name: Run Dagger for pipeline-manager development testing
#         uses: dagger/dagger-for-github@8.0.0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           HELM_REPO_PAT: ${{ secrets.HELM_REPO_PAT }}
#         with:
#           module: github.com/BCIT-LTC/daggerverse/pipeline-manager@35-add-prefix-for-latest-and-review
#           call: >-
#             run
#             --source=.
#             --github_token=env://GITHUB_TOKEN
#             --helm_repo_pat=env://HELM_REPO_PAT
#             --username=${{ github.actor }}
#             --app_name=${{ github.event.repository.name }}
#             --branch=${{ github.ref_name }}
#             --commit_hash=$(echo $GITHUB_SHA | cut -c1-7)
#             --registry_path=ghcr.io/${{ github.repository }}
#             --repository_url=${{ github.server_url }}/${{ github.repository }}
#           cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
#           version: "latest"
          
