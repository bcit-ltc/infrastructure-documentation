name: build and push app image

on:
  push:
    branches:
      - '**'

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history for tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: semantic-release (dry-run)
        id: semrel
        uses: docker://ghcr.io/codfish/semantic-release-action@sha256:5d5447090feb2f9252aac2825ef14e244ecf53528fbe87d585b459adb547b914
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          dry-run: true
          plugins: |
            ['@semantic-release/commit-analyzer', '@semantic-release/release-notes-generator', '@semantic-release/github']

      - name: Compute tags & metadata
        id: vars
        shell: bash
        run: |
          set -euo pipefail
          IMAGE="${REGISTRY}/${GITHUB_REPOSITORY,,}"
          REPO_NAME="${GITHUB_REPOSITORY#*/}"
          SHORT_SHA="${GITHUB_SHA::7}"
          TS="$(date -u +%Y%m%d%H%M%S)"
          SOURCE_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"

          NEW="${{ steps.semrel.outputs.new-release-published }}"
          REL="${{ steps.semrel.outputs.release-version }}"

          declare -a TAGS
          if [[ "${NEW}" == "true" && -n "${REL}" ]]; then
            VERSION="${REL}"
            TAGS=("${IMAGE}:${VERSION}" "${IMAGE}:latest" "${IMAGE}:stable")
          else
            RAW="$(git describe --tags --abbrev=0 2>/dev/null || true)"
            BASE="${RAW#v}"; [[ -z "${BASE}" ]] && BASE="0.0.0"
            VERSION="${BASE}-rc.${SHORT_SHA}.${TS}"
            TAGS=("${IMAGE}:${VERSION}" "${IMAGE}:latest")
          fi

          DESC="${REPO_NAME} ${VERSION} • ${GITHUB_REPOSITORY}@${GITHUB_SHA} • built ${TS}"

          {
            echo "version=${VERSION}"
            echo "description=${DESC}"
            echo "source_url=${SOURCE_URL}"
            echo "tags<<EOF"
            printf '%s\n' "${TAGS[@]}"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.vars.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ steps.vars.outputs.description }}
            org.opencontainers.image.version=${{ steps.vars.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ steps.vars.outputs.source_url }}
          provenance: mode=max
          sbom: false
