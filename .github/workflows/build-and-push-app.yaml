name: build and push app image

on:
  push:
    branches:
      - "**"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      # - run: codfish/semantic-release-action@v4
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v5

      # you'll need to add an `id` in order to access output variables
      - uses: docker://ghcr.io/codfish/semantic-release-action@sha256:5d5447090feb2f9252aac2825ef14e244ecf53528fbe87d585b459adb547b914
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          dry-run: true
          repository-url: https://github.com/bcit-ltc/infrastructure-documentation.git
          plugins: |
            ['@semantic-release/commit-analyzer', '@semantic-release/release-notes-generator', '@semantic-release/github']

      - run: echo ${{ steps.semantic.outputs.release-version }}

      - run: echo "$OUTPUTS"
        env:
          OUTPUTS: ${{ toJson(steps.semantic.outputs) }}

      - run: |
          echo $GIT_TAG
          echo $RELEASE_VERSION
          echo $RELEASE_MAJOR
          echo $RELEASE_MINOR
          echo $RELEASE_PATCH

      - name: docker push version
        if: steps.semantic.outputs.new-release-published == 'true'
        run: |
          docker tag {{ github.repository }} {{ github.repository }}:$TAG
          docker push {{ github.repository }}:$TAG
        env:
          TAG: v$RELEASE_VERSION


      - name: Describe Tags
        run: |
          # git fetch --prune --unshallow
          latest_tag=$(git describe --tags --abbrev=0 HEAD~)
          echo "Latest Tag: $latest_tag"

      # - run: codfish/semantic-release-action@v4
      #   with:
      #     plugins: |
      #       [ '@semantic-release/commit-analyzer',
      #         [
      #           "@semantic-release/release-notes-generator",
      #           {
      #             "preset": "conventionalcommits",
      #             "presetConfig": {
      #               "types": [
      #                 { type: 'feat', section: 'Features', hidden: false },
      #                 { type: 'fix', section: 'Bug Fixes', hidden: false },
      #                 { type: 'perf', section: 'Performance Improvements', hidden: false },
      #                 { type: 'revert', section: 'Reverts', hidden: false },
      #                 { type: 'docs', section: 'Other Updates', hidden: false },
      #                 { type: 'style', section: 'Other Updates', hidden: false },
      #                 { type: 'chore', section: 'Other Updates', hidden: false },
      #                 { type: 'refactor', section: 'Other Updates', hidden: false },
      #                 { type: 'test', section: 'Other Updates', hidden: false },
      #                 { type: 'build', section: 'Other Updates', hidden: false },
      #                 { type: 'ci', section: 'Other Updates', hidden: false }
      #               ]
      #             }
      #           }
      #         ],
      #         '@semantic-release/github'
      #       ]

      # - name: Docker meta
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     # list of Docker images to use as base name for tags
      #     images: |
      #       name/app
      #       ghcr.io/username/app
      #     # generate Docker tags based on the following events/attributes
      #     tags: |
      #       type=schedule
      #       type=ref,event=branch
      #       type=ref,event=pr
      #       type=semver,pattern={{version}}
      #       type=semver,pattern={{major}}.{{minor}}
      #       type=semver,pattern={{major}}
      #       type=sha

      # - name: Login to Docker Hub
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ vars.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Login to GHCR
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
